---
import Select from './Select.astro';
import CTA from './CTA.astro';
import CopyCTA from './CopyCTA.astro';

const { type } = Astro.props;
const expiration = ['1 days', '2 days', '3 days'];
---

<div class="control-panel">
    {type === 'create'
        ?
            <form id="controlPanel">
                <Select
                    name="expiration_time"
                    label="Expiration time"
                    options={expiration}
                />

                <!-- hidden - to set editor's text on `save` before the form submits to API -->
                <input type="hidden" name="code_snippet" id="code_snippet" />
                <CTA />
            </form>
        : <CopyCTA />    
    }
</div>

<script>
    const API_URL = import.meta.env.PUBLIC_API_URL;

    // const form = document.querySelector('.control-panel > form');
    const form = document.forms.controlPanel;
    form.addEventListener('submit', submitHandler);

    async function submitHandler(e) {
        e.preventDefault();
        const payload = extractFormData(form);
        console.log('ðŸš€ ~ submitHandler ~ payload:', payload);

        const result = await savePaste(API_URL, payload);
        console.log('ðŸš€ ~ submitHandler ~ result:', result);

        // redirect user.
        // @TODO: find if you can redirect using Astro's inbuilt .redirect() method
        window.location.href = 'pastes/' + result.url;
    }

    function extractFormData(form) {
        const formData = new FormData(form);
        const payload = {};
        const days = Number(formData.get('expiration_time').split('days')[0]);

        payload.code_snippet = formData.get('code_snippet');
        payload.expiration_time = days;

        return payload;
    }

    async function savePaste(url, payload) {
        console.log('ðŸš€ ~ savePaste ~ payload:', payload);

        const response = await fetch(url, {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(payload),
        });

        return await response.json();
    }
</script>
